<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="29" passed="28">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="1410" started-at="2020-05-25T14:28:10 IST" finished-at="2020-05-25T14:28:12 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="1410" started-at="2020-05-25T14:28:10 IST" finished-at="2020-05-25T14:28:12 IST">
      <class name="Test.Day2">
        <test-method status="PASS" signature="Demo()[pri:0, instance:Test.Day2@623dcf2a]" name="Demo" duration-ms="10" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method status="PASS" signature="beforeeverymethod()[pri:0, instance:Test.Day2@623dcf2a]" name="beforeeverymethod" is-config="true" duration-ms="0" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeverymethod -->
        <test-method status="PASS" signature="beforeeverymethod()[pri:0, instance:Test.Day2@623dcf2a]" name="beforeeverymethod" is-config="true" duration-ms="2" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeverymethod -->
        <test-method status="PASS" signature="a1()[pri:0, instance:Test.Day2@623dcf2a]" name="a1" duration-ms="10" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a1 -->
        <test-method status="PASS" signature="beforeeverymethod()[pri:0, instance:Test.Day2@623dcf2a]" name="beforeeverymethod" is-config="true" duration-ms="0" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeverymethod -->
        <test-method status="PASS" signature="name()[pri:0, instance:Test.Day2@623dcf2a]" name="name" duration-ms="0" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
      </class> <!-- Test.Day2 -->
      <class name="Test.Parameterising">
        <test-method status="PASS" signature="Finance()[pri:0, instance:Test.Parameterising@117525fe]" name="Finance" duration-ms="2" started-at="2020-05-25T14:28:12 IST" finished-at="2020-05-25T14:28:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Finance -->
        <test-method status="PASS" signature="HR()[pri:0, instance:Test.Parameterising@117525fe]" name="HR" duration-ms="0" started-at="2020-05-25T14:28:12 IST" finished-at="2020-05-25T14:28:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HR -->
        <test-method status="PASS" signature="Office()[pri:0, instance:Test.Parameterising@117525fe]" name="Office" duration-ms="10" started-at="2020-05-25T14:28:12 IST" finished-at="2020-05-25T14:28:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Office -->
        <test-method status="PASS" signature="AfSuite()[pri:0, instance:Test.Parameterising@117525fe]" name="AfSuite" is-config="true" duration-ms="0" started-at="2020-05-25T14:28:12 IST" finished-at="2020-05-25T14:28:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfSuite -->
      </class> <!-- Test.Parameterising -->
      <class name="Test.DepandsOnMethod">
        <test-method status="PASS" signature="Demo()[pri:0, instance:Test.DepandsOnMethod@3804a9a8]" name="Demo" duration-ms="0" started-at="2020-05-25T14:28:12 IST" finished-at="2020-05-25T14:28:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method status="PASS" signature="beforeeverymethod()[pri:0, instance:Test.DepandsOnMethod@3804a9a8]" name="beforeeverymethod" duration-ms="10" started-at="2020-05-25T14:28:12 IST" finished-at="2020-05-25T14:28:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeverymethod -->
        <test-method status="PASS" signature="name()[pri:0, instance:Test.DepandsOnMethod@3804a9a8]" name="name" duration-ms="10" started-at="2020-05-25T14:28:12 IST" finished-at="2020-05-25T14:28:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method status="PASS" signature="a1()[pri:0, instance:Test.DepandsOnMethod@3804a9a8]" name="a1" duration-ms="2" started-at="2020-05-25T14:28:12 IST" depends-on-methods="Test.DepandsOnMethod.beforeeverymethod" finished-at="2020-05-25T14:28:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a1 -->
      </class> <!-- Test.DepandsOnMethod -->
      <class name="Test.Aftermethod">
        <test-method status="PASS" signature="Demo()[pri:0, instance:Test.Aftermethod@6981f8f3]" name="Demo" duration-ms="172" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method status="PASS" signature="beforeeverymethod()[pri:0, instance:Test.Aftermethod@6981f8f3]" name="beforeeverymethod" is-config="true" duration-ms="0" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeverymethod -->
        <test-method status="PASS" signature="a1()[pri:0, instance:Test.Aftermethod@6981f8f3]" name="a1" duration-ms="0" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a1 -->
        <test-method status="PASS" signature="name()[pri:0, instance:Test.Aftermethod@6981f8f3]" name="name" duration-ms="10" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method status="PASS" signature="beforeeverymethod()[pri:0, instance:Test.Aftermethod@6981f8f3]" name="beforeeverymethod" is-config="true" duration-ms="0" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeverymethod -->
        <test-method status="PASS" signature="beforeeverymethod()[pri:0, instance:Test.Aftermethod@6981f8f3]" name="beforeeverymethod" is-config="true" duration-ms="0" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeverymethod -->
      </class> <!-- Test.Aftermethod -->
      <class name="Test.Day1">
        <test-method status="PASS" signature="a1()[pri:0, instance:Test.Day1@4c6007fb]" name="a1" is-config="true" duration-ms="46" started-at="2020-05-25T14:28:10 IST" finished-at="2020-05-25T14:28:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a1 -->
        <test-method status="PASS" signature="name()[pri:0, instance:Test.Day1@4c6007fb]" name="name" is-config="true" duration-ms="0" started-at="2020-05-25T14:28:10 IST" finished-at="2020-05-25T14:28:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method status="PASS" signature="Demo()[pri:0, instance:Test.Day1@4c6007fb]" name="Demo" duration-ms="8" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
      </class> <!-- Test.Day1 -->
      <class name="Test.Part2">
        <test-method status="PASS" signature="Demo()[pri:0, instance:Test.Part2@5f7989fa]" name="Demo" duration-ms="0" started-at="2020-05-25T14:28:12 IST" finished-at="2020-05-25T14:28:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method status="PASS" signature="Demo1()[pri:0, instance:Test.Part2@5f7989fa]" name="Demo1" duration-ms="0" started-at="2020-05-25T14:28:12 IST" finished-at="2020-05-25T14:28:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo1 -->
        <test-method status="PASS" signature="luck()[pri:0, instance:Test.Part2@5f7989fa]" name="luck" is-config="true" duration-ms="3" started-at="2020-05-25T14:28:12 IST" finished-at="2020-05-25T14:28:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- luck -->
      </class> <!-- Test.Part2 -->
      <class name="Test.Demo4">
        <test-method status="PASS" signature="Demo()[pri:0, instance:Test.Demo4@646c0a67]" name="Demo" duration-ms="0" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method status="PASS" signature="beforeeverymethod()[pri:0, instance:Test.Demo4@646c0a67]" name="beforeeverymethod" is-config="true" duration-ms="0" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeverymethod -->
        <test-method status="PASS" signature="beforeeverymethod()[pri:0, instance:Test.Demo4@646c0a67]" name="beforeeverymethod" is-config="true" duration-ms="2" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeverymethod -->
        <test-method status="PASS" signature="a1()[pri:0, instance:Test.Demo4@646c0a67]" name="a1" duration-ms="0" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a1 -->
        <test-method status="PASS" signature="name()[pri:0, instance:Test.Demo4@646c0a67]" name="name" duration-ms="21" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method status="PASS" signature="beforeeverymethod()[pri:0, instance:Test.Demo4@646c0a67]" name="beforeeverymethod" is-config="true" duration-ms="0" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeverymethod -->
      </class> <!-- Test.Demo4 -->
      <class name="Test.Demo3">
        <test-method status="PASS" signature="TEsting3()[pri:0, instance:Test.Demo3@68a4dcc6]" name="TEsting3" duration-ms="10" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TEsting3 -->
        <test-method status="PASS" signature="Testing()[pri:0, instance:Test.Demo3@68a4dcc6]" name="Testing" duration-ms="0" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Testing -->
        <test-method status="PASS" signature="Testing1()[pri:0, instance:Test.Demo3@68a4dcc6]" name="Testing1" duration-ms="28" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Testing1 -->
      </class> <!-- Test.Demo3 -->
      <class name="Test.Demo2">
        <test-method status="PASS" signature="Fee()[pri:0, instance:Test.Demo2@e84fb85]" name="Fee" duration-ms="2" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Fee -->
        <test-method status="PASS" signature="School()[pri:0, instance:Test.Demo2@e84fb85]" name="School" duration-ms="0" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- School -->
        <test-method status="PASS" signature="Sports()[pri:0, instance:Test.Demo2@e84fb85]" name="Sports" duration-ms="0" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Sports -->
      </class> <!-- Test.Demo2 -->
      <class name="Test.Demo1">
        <test-method status="PASS" signature="Finance()[pri:0, instance:Test.Demo1@2eae4349]" name="Finance" duration-ms="2" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Finance -->
        <test-method status="PASS" signature="HR()[pri:0, instance:Test.Demo1@2eae4349]" name="HR" duration-ms="8" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HR -->
        <test-method status="PASS" signature="Office()[pri:0, instance:Test.Demo1@2eae4349]" name="Office" duration-ms="4" started-at="2020-05-25T14:28:11 IST" finished-at="2020-05-25T14:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Office -->
        <test-method status="PASS" signature="AfSuite()[pri:0, instance:Test.Demo1@2eae4349]" name="AfSuite" is-config="true" duration-ms="0" started-at="2020-05-25T14:28:12 IST" finished-at="2020-05-25T14:28:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfSuite -->
      </class> <!-- Test.Demo1 -->
      <class name="Test.onTestFailure">
        <test-method status="PASS" signature="a1()[pri:0, instance:Test.onTestFailure@3e33d73e]" name="a1" is-config="true" duration-ms="0" started-at="2020-05-25T14:28:10 IST" finished-at="2020-05-25T14:28:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a1 -->
        <test-method status="PASS" signature="name()[pri:0, instance:Test.onTestFailure@3e33d73e]" name="name" is-config="true" duration-ms="0" started-at="2020-05-25T14:28:10 IST" finished-at="2020-05-25T14:28:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method status="FAIL" signature="Demo()[pri:0, instance:Test.onTestFailure@3e33d73e]" name="Demo" duration-ms="10" started-at="2020-05-25T14:28:12 IST" finished-at="2020-05-25T14:28:12 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:968)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at Test.onTestFailure.Demo(onTestFailure.java:13)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
      </class> <!-- Test.onTestFailure -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
